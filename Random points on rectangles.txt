import java.util.ArrayList;
import java.util.List;
import java.util.Random;

class Solution {

    int[][] rects;  // Array of rectangles
    Random r = new Random();  // Random object for generating random numbers
    int total = 0;  // Total number of points across all rectangles
    List<Integer> sum = new ArrayList<>();  // Cumulative sum of points up to each rectangle

    public Solution(int[][] rects) {
        this.rects = rects;  // Initialize rects with the input rectangles
        // Calculate the total number of points and populate the sum list
        for (int[] rec : rects) {
            total += (rec[2] - rec[0] + 1) * (rec[3] - rec[1] + 1);
            sum.add(total);
        }
    }

    public int[] pick() {
        int target = r.nextInt(total);  // Generate a random number from 0 to total-1
        int lo = 0, hi = rects.length - 1;

        // Binary search to find the rectangle that contains the target point
        while (lo < hi) {
            int mid = lo + (hi - lo) / 2;
            if (target >= sum.get(mid)) lo = mid + 1;
            else hi = mid;
        }

        // Get the rectangle that contains the target point
        int[] rect = rects[lo];
        int x1 = rect[0];
        int y1 = rect[1];
        int x2 = rect[2];
        int y2 = rect[3];

        // Generate a random point within the rectangle
        int x = r.nextInt(x2 - x1 + 1);
        int y = r.nextInt(y2 - y1 + 1);
        
        return new int[]{x1 + x, y1 + y};  // Return the randomly picked point
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(rects);
 * int[] param_1 = obj.pick();
 */
